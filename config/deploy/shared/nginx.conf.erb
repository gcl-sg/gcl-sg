upstream <%= fetch(:full_app_name) %>_unicorn {
server unix:/tmp/unicorn.<%= fetch(:full_app_name) %>.sock fail_timeout=0;
}

server {
  server_name <%= fetch(:server_name) %>;
  return 301 http://www.<%= fetch(:server_name) %>$request_uri;
}

server {
  server_name www.<%= fetch(:server_name) %> en.<%= fetch(:server_name) %> tc.<%= fetch(:server_name) %>;
  <% if fetch(:stage).to_s == 'production' %>
    access_log  /var/log/nginx/access.<%= fetch(:full_app_name) %>_unicorn.log  main;
    error_log /var/log/nginx/error.<%= fetch(:full_app_name) %>_unicorn.log;
  <% end %>
  listen 80;
  root <%= fetch(:deploy_to) %>/current/public;

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  location ~ /sitemap.*xml\.gz {
    root <%= fetch(:deploy_to) %>/current/public/shared;
  }

  #location /cable {
  #  proxy_pass         http://<%= fetch(:full_app_name) %>_unicorn/cable;
  #  proxy_http_version 1.1;
  #  proxy_set_header   Upgrade $http_upgrade;
  #  proxy_set_header   Connection "Upgrade";
  #}

  try_files $uri/index.html $uri @<%= fetch(:full_app_name) %>_unicorn;
  location @<%= fetch(:full_app_name) %>_unicorn {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://<%= fetch(:full_app_name) %>_unicorn;
  }

  error_page 500 502 503 504 /500.html;
  client_max_body_size 4G;
  keepalive_timeout 10;
}

<% if fetch(:enable_ssl) %>
server {
  server_name <%= fetch(:server_name) %>;
  listen 443 ssl http2;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_certificate /etc/letsencrypt/live/gcl-sg.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/gcl-sg.com/privkey.pem;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 10m;
  ssl_buffer_size 8k;
  ssl_stapling on;
  ssl_stapling_verify on;
  add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";#启动HSTS
  ssl_ciphers 'CHACHA20:EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH:ECDHE-RSA-AES128-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA128:DHE-RSA-AES128-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA128:ECDHE-RSA-AES128-SHA384:ECDHE-RSA-AES128-SHA128:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES128-SHA128:DHE-RSA-AES128-SHA128:DHE-RSA-AES128-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA384:AES128-GCM-SHA128:AES128-SHA128:AES128-SHA128:AES128-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4;';
  ssl_prefer_server_ciphers on;
  return 301 https://www.<%= fetch(:server_name) %>$request_uri;
}
server {
  server_name www.<%= fetch(:server_name) %> en.<%= fetch(:server_name) %> tc.<%= fetch(:server_name) %>;
  <% if fetch(:stage).to_s == 'production' %>
    access_log  /var/log/nginx/access.ssl.<%= fetch(:full_app_name) %>_unicorn.log  main;
    error_log /var/log/nginx/error.ssl.<%= fetch(:full_app_name) %>_unicorn.log;
  <% end %>

  listen 443 ssl http2;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_certificate /etc/letsencrypt/live/gcl-sg.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/gcl-sg.com/privkey.pem;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 10m;
  ssl_buffer_size 8k;
  ssl_stapling on;
  ssl_stapling_verify on;
  add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";#启动HSTS
  ssl_ciphers 'CHACHA20:EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH:ECDHE-RSA-AES128-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA128:DHE-RSA-AES128-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA128:ECDHE-RSA-AES128-SHA384:ECDHE-RSA-AES128-SHA128:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES128-SHA128:DHE-RSA-AES128-SHA128:DHE-RSA-AES128-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA384:AES128-GCM-SHA128:AES128-SHA128:AES128-SHA128:AES128-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4;';
  ssl_prefer_server_ciphers on;

  root <%= fetch(:deploy_to) %>/current/public;

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  try_files $uri/index.html $uri @<%= fetch(:full_app_name) %>_unicorn;
  location @<%= fetch(:full_app_name) %>_unicorn {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto https;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://<%= fetch(:full_app_name) %>_unicorn;
  }

  error_page 500 502 503 504 /500.html;
  client_max_body_size 4G;
  keepalive_timeout 10;
}
<% end %>
