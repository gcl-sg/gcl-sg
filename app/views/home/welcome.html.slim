= content_for :banner do
  - banners = Banner.visible
  .full-carousel
    ul.carousel-items
      - banners.each_with_index do |banner, i|
        li
          .img-container= image_tag banner.cover.detail.url
          .container
            h2.title= banner.title
            .desc
              = banner.description
            = link_to banner.url, class: 'action' do
              i.fa.fa-arrow-right
              = t('.more')
    - if banners.count >= 2
      .indicator
        ul
          li*{class: 'first'}
          - if banners.count >= 3
            - (banners.count - 2).times do
              li
          li*{class: 'last'}
          li.active-indicator
= content_for :full_content do
  .full-content
    .section.about-us
      - company_profile = CompanyProfile.visible.first
      - if company_profile.present?
        .container
          h2.section-title.text-center= company_profile.title
          .content = company_profile.description.html_safe

    .section.our-business
      - businesses = Business.visible
      - if businesses.present?
        .h2.section-title.text-center=t('.our_business')
        .content.rich-cards
          - businesses.each do |business|
            .rich-card
              .card-content
                img.lazy data-lazy=business.cover.detail.url
                .card-desc
                  h4.card-title= business.title
                  .card-text= business.description

    - news = News.with_locale.visible.company.first(8)
    - top_news = news.shift
    - if news.present?
      .company-news
        .container
          .top-image
            img.lazy data-lazy=top_news.cover.detail.url
          .events
            .top-event
              = link_to top_news.title, resolve_news_path(top_news), class: 'title'
              .event-intro
                p= truncate(strip_tags(sanitize(top_news.body)), length: 100, omission: '...')
            ul.article-list
              - news.each do |news_entry|
                li
                  = link_to resolve_news_path(news_entry) do
                    i.fa.fa-arrow-right
                    = news_entry.title
                    time= l news_entry.published_at.to_date, format: :long

    = cache [I18n.locale, Plate.visible.cache_key] do 
      .container.entries
        - Plate.visible.each do |plate|
          = link_to plate.url, class: 'entry' do
            .entry-content
              img.lazy.entry-bg data-lazy= plate.image.url
              .slogan style="background-color: #{plate.color}; background-color: rgba(#{Sass::Script::Value::Color.from_hex(plate.color, 0.84).rgba.join(',')});"
                = image_tag 'circle-arrow.png', class: 'arrow'
                .text
                  p= plate.title
                  em= plate.sub_title
                  p: span= plate.desc
